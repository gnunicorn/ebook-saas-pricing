= A Coders Guide to SaaS-App-Pricing =
:Author: Benjamin Kampmann
:Email: ben@create-build-execute.com
:Date: March 30th, 2014
:Revision: 0.8
:stylesdir: stylesheets/
:stylesheet: scribe.css




== Introduction ==

This is a short guide – on purpose. In the spirit of 37Signals' Getting Real sticks to the information relevant and in a brief but thorough fashion. This guide will teach you all you need and want to know about  pricing Software-as-a-Service (SaaS) Application. It won't tell you want a SaaS is and what it isn't how to structure or build it. This guide solely focuses on putting an optimal price tag on it. Though many of the rules might also apply to similar models like Kickstarter Campaigns, this guide focuses on recurring subscription pricing of SaaS for consumer and B2B-business.

If you are here to just get a number: it is €29.95 per month (respectively $39.95). This guide will explain you why and which cases it is different. But if you don't care and just want a number, odds are, this is the number you want.

Enjoy.

=== Changelog ===

As this is supposed to be published primarily online, the document will have updates (in form of continues deployment). This section lists the changes, latest to first.

If you want to stay up-to-date, please navigate to https://github.com/ligthyear/ebook-saas-pricing , log-in (or sign up), click on the "Not watching"-button and select "watching".

**Latest Changes**:

 - 2014-05-22:
   * minor copyedits
   * copyedit on slack case study

 - 2014-05-21
   * finish first copy edit
   * add slack.com case study for pay-as-you-go-with-plans

 - 2014-05-11
   * latest copy edit
   * fix the build, make publishable

 - 2014-03-12
  * copy edits

 - 2013-12-30
   * first draft

<<<<


== What makes SaaS different?
Software as a Service (SaaS) is a very interesting business model. With a subscription system at its core, SaaS revenue doesn't come from new costumers only – it makes sense to focus on building a great product for your existing customers, too. Another highly fascinating aspect about SaaS lies in their cost structure: there are very low – if any – per-item-costs. While you need personnel to build, improve and scale it, this still makes it cheap compared to the cost structures of so many other businesses, where you might have to buy expensive special vehicles and tools and pay for per-item materials. As the term says, it is a service business and a highly cost-efficient scaling one, too.

Unlike classic licensed software, SaaS can enhance much faster – a feature missing last month can quickly be added to match up with competition and deployed across all clients. And though especially in B2B comparing of feature lists is still very common, one or two missing features aren't deal-breakers any more because of that dynamic. Aside from certain third-party integrations which are bound to business deals, there's barely ever any competitive advantage through features. Most likely you have a unique feature or way of doing things that differentiate you, while your competition might has offers, you don't need or don't want to have. Which makes a customers a perfect fit for you. In the service industry you always want to convince your customers with another argument than "being cheaper" – and so want your competitors, by the way.

Running a software in this the service industry means, you are not bound to have to think about pricing in a competitive manner nor do you have any costs forcing you to structure the pricing around them. Setting the price for a SaaS is totally in your hands, which makes it a game of psychology. One of high importance even, as it is a key factor whether people can effort and want to pay for it. The beauty of it though, once you've found the target, it will sell like hot cake. On top, you have basically no costs on upselling them further either. We'll come back to that later.

<<<<


== Pricing Psychology basics

SaaS product have a few more spins to it though. Another one is its ability to be repackaged into essentially any size for no further costs. You can sell the same thing just in three or four different sizes. Thus allowing you to have an offer for each budget size.

With its low costs, this is a key instrument in SaaS pricing: have multiple plans. But be aware to give only a few. Offering too many makes the choice harder: there is too much to read and compare making it hard to decide which is the best solution – a fundamental problem with crowd funding pricing. plans instead should be comparable on one page, their differences and benefits clearly distinguishable making it easy to find that plan that fits the customer the best. In my experiences three pricing levels work the best - some argue it's five, but I often feel that is too much to read (and you'd need five clear differentiations).

=== How low can you go?

The lowest priced plans is the one, you'll use for advertising and marketing. Try to make it as low as you can reason without having the feeling of selling out cheap. This is also the (only) plan you offer a free trial with. Both of these measures make it easier for people to start using your product. By making it fairly inexpensive it also has fewer cancellation. Even if people decide to not stick with your product, a price of for e.g. €9.99/month doesn't feel like the trouble of trying to cancel (don't make it hard to cancel though!). So, go as low as you can and still feel comfortable and make some money with.

=== Too thin

Your real costumers won't use it anyways, as that plan is too lightweight for them. The lowest offer shouldn't be bad or cheesy, but don't forget it is your marketing pricing to get people to look into your service, to try it out and hook them on it. This plan therefore should deliver the "just not quiet enough". If you've any reasonable idea of your business, you can probably tell right on the spot what is required to make it enough for your customers – otherwise do some market research. For example your customers might be self-employed lawyers acting on 10 cases at the same time, and your smallest plan only includes up to 8 non-archived cases.

It should be obvious that this plan isn't quiet enough for them. Don't make it to obvious, nor give a completely useless offer, instead use terms and numbers they understand. They should have the feeling it isn't sufficient for what they need. For a very simple reason: when they are checking your pricing this thoroughly, they've looked through your promo page, are interested in your service and most likely want to use it. If they just want to try it, these numbers don't mean much. They'll hit the "free trial button" without wasting another look at it. But when they come back, after maybe having tried it and competitors, and do take the time to go through your offer thoroughly, you've already won. They are sold. Now you only need to settle on the price with them. And by making the cheapest solution unusable to them, they immediately move to the second plan, not even questioning whether another competition might be better at the same price. And it also gives them a slight satisfactory feeling of "being higher than just somebody".

=== The second is good, the third is to settle
Now the second plan offers much more than the lowest one we've talked about. Not only can they run their business with it, but it is almost too generous, offers more than they ever feel to be needing. For just about double the initial price (or slightly less) - it's very good. It is in the price range they want to and _should_ settle. But they don't. By offering so much already – essentially all they ever wanted – they've become curious about what more you could be offering. And they'll have a look at the third plan to compare it to the second.

This it where things get interesting. By having a price slightly higher than the second plan but adding something extra-ordinary - even if they don't necessarily need it - the offer will be very interesting to them. By adding this extra-ordinary you increase the attractiveness of the third plan a lot, while staying comparably in-expensive. Comparing them it actually feels like a really good offer, you get more for your buck. In my experience, the best way to achieve this is by adding exactly one major key feature on top (aside from appropriate scaling parameters). Like in the former mentioned lawyer example, add a second account for an office assistant - it adds a lot, but got "thrown in" for what feels like nothing. So comparing plan two and three, three becomes is much more attractive.

.The psychology behind this
NOTE: has been explained very well by link:http://www.youtube.com/watch?v=xOhb4LwAaJk[Dan Ariely on youtube]: we don't know our preferences that well and therefore are receptive to influences like supposedly good offers in comparison to another.

=== Ending with the Nine

I've very bluntly ignored the discussing of the pricing numbers. You might have noticed I've only presented you cases ending on nine. If you are little familiar with the subject, you know that we don't exactly know why, but having the price end with a nine outsells every other option (with five and seven right behind, but off by far). This has been shown in a series of studies, like link:http://link.springer.com/article/10.1023%2FA%3A1023581927405[this one from MIT] and discussed in detail in books like link:http://www.amazon.com/dp/080909469X/ref=cm_sw_su_dp["Priceless" by William Poundstone] footnote:[Published at Hill and Wang, 2011, ISBN 978-0809094691]. If you want more detail on that, I recommend reading those for further insight.

=== Enterprise ain't part of this

The described applies as long as you are mainly talking to end-consumers, small- and mid-size businesses but not for enterprise. The basic rule goes like this: if the company is big enough to employ someone, who's main job it is to buy these services, they'll call you up and ask to negotiate a custom pricing plan with you. And even if it's only to justify the existence of their job (as they have work to do: negotiate with you), believe me, they'll do it.Which costs extra effort on your side in compared to auto-serviced customers, signing up through the website, so don't forget to charge them for it, too.

If you expect Corporate Customers, add another box on the bottom (or somewhere clearly off the comparison table) saying you are open to discuss further models and individual pricing for bigger customers or special areas (like non-profits or education, like Google is doing). During the negotiation you then go from two simultaneous stream to ten and add a big support package on top, that you sell for at least ten times the price you have on your highest plans. That at least puts it back into the price-range that enterprise is used to deal with and happy talk to about: they really rather buy the service for 5.000 € than for 50 € as the later is harder to justify to be employed for.

That is also why even your highest priced plan does have some limits to it: otherwise you'd have nothing to sell to enterprise and high-class customers. Even if during negotiations you settle for eight times the highest plan so they feel they "won" the negotiation with you, it was worth the effort for you. But don't ever think that this is an option to include via a one-click sign-up. Enterprises don't do one-click-sign-up.


<<<<


== Upselling without Upsetting

I've mentioned upselling within SaaS-Product before – it's one of the most beautiful aspects of it. In a way the previously discussed pricing strategy on a plan comparison page is a way of upselling already by trying to move customers into the higher priced plans. But there is often more you can upsell with. Sadly, upselling has been abused in the past, like airlines tricking you into getting a "travel insurance" by pre-checking boxes for you. No wonder upselling has a bad taste to some – for good reason, that behavior is pretty upsetting to anyone. Clearly not the first experience you want to have starting to do business with your customers. Understand that the upsell is still part of the first experience chain and getting this right is equally important.

=== How to structure the upsell

Upselling is generally considered the phase after you've already successfully converted an a person interested into a customer by buying something but hasn't yet checked out. So generally speaking, upselling happens on the next page after the customer clicked "buy this plan".

In SaaS you often follow with a configuration screen, like a (sub-) domain name to configure that it should be hosted on. This is a perfect time to upsell. The customer has already decided about their plan and they want to become a customer. They are in the process of setting up and might simply be interested in configuring more features. Another beauty lies in the fact that the plan comprising page is already behind them. They've settled for one. Meaning they won't go back an compare that when buying these two extra features, they might be better off at a different plan or the exact same feature might has a different upsell price on another plan. But they don't care.

At this time it is about presenting presenting some additional options in a non-threatening way and let them "configure" those.


=== What to upsell

In order to be able to upsell, you obviously need to know your numbers and your customers. For upselling the best are those features, people think they need, will need soon or want but which are slightly outside of the main product. Thinking of our lawyer example from before, you could allow them to configure more frequent backups of their data (increase to hourly for example) for a little more or allow them to enable encryption (and secure signing) for archived cases. Both are not necessarily the core of the product, but your customers, once reminded that this exists, might want it and are willing to pay for it. An upsell is always the question of what you _need_, _want_ and might _want to need_.


Another example would be the an online radio streaming service, which had a feature allowing to directly stream to the shoutcast service. Shoutcast is an external server that would then handle the distribution of the streams, resulting in their service only having to offer one output stream. It didn't cost them anything – if anything it was cheaper for them as the traffic would go through Shoutcast. But as many (if not all) other competing providers forbid these kind of features to enable a lock-in effect, enabling this feature is a classic thing to upsell with. Not only because more people think they need it than actually ever use it but also as the numbers show plenty people do use it instead of taking the more expensive plan with more streams.

By having to buy this feature extra on the second page, for an additional price, many people were willing to pay a higher total than just getting a plan that costs more but includes more streams and but would cover that, too. People pay for control and convenience.

<<<<

== The holy Grail of Pay-as-you-go

The latest addition to the pricing models in the SaaS market is the pay-as-you-go-model. One of the first to offer this in large scale – and make tons of money that way – was Amazon with its cloud solution Amazon Web Services (AWS). In there you'd be paying for only what you use as in CPU-Cycles, storage and traffic. Unlike many other services which only give you limited resources and block its entire usage for you, this model allows you to easily grow and scale your business starting very small but becoming very big, too. And though especially on large scale, Amazon is a very expensive cloud infrastructure, it is still the most widely used and implemented one out there. Leaving analysts puzzled how they do it.

This confusion is rooted in a common misunderstanding of the pay-as-you-go model: despite popular believe, the selling point actually isn't the resource itself. What people buy are flexibility and convenience. Flexibility because most of those services offer a very, very low starting plan, a basic offer that is free in most cases. You can spin up a free instance on AWS within half an hour and try out things you want to build. For many things, this is enough to get started and only once a project gains traction and generates traffic, one needs to upgrade to bigger machines and pay for the extra resources used.

In a pay-as-you-go-model you barely have any plans to take, no steps to grow. The payment grows with the customers of the customer. And though those are priced very high, as they are always directly linked to the amount of customers they have, it is very easy to calculate that into the pricing for ones customers, it becomes a static fee per customer to calculate into their charge. At the same time it is highly flexible and promises to be able to handle peaks for you, too. Peaks are good for your business, as they usually mean more business. But if one runs out of the traffic package because of a peak, that is very bad. The pay-as-you-go-model might be more expensive than the same resource if booked traditionally but customers are paying not for the actual resource, they buy the flexibility to use resource they don't need at the moment but think they might will.

The other thing it sells is the promise of growth. An infrastructure services like this makes it easy for you to grow on it. It is even in their interest for you to grow, as more business for their customer means more business for them. Which is the best business model you can ever have, one with the interest into growing the customers business. Greatest of all business goals.

=== Applied to Plans
Thinking back of the plans we talked about before, how does that integrate in a pay-as-you-go-model? Amazon has been pioneering here as well, with a feature they call "reserved instance hours". It boils down to a classic and old principle: the discount if you buy a lot and pay upfront.

Basically instead of being charged for every minute you use, you say at the beginning of a period that you'll pay for at least 2 full CPU months and Amazon gives you that for a discount. If you don't use them, you pay too much but if you do, you don't pay as much as for the normal pay-as-you-go. If you need more resources than that, you often pay a discounted price on those extra resources, too. Not as good as the offer for the reserved resource but still cheaper than if you hadn't reserved at all.

So, if there is any way that you can create billable timed resources through your service, this is the model you want to go for. Going back to the radio streaming example from before: one stream hour could be such a resource – every hour that one persons listens to a stream. Now on the lowest plan, you'd have to pay nothing, get 1.000 StreamHours included but every stream hour after is at 10 ¢ - this would account for a little more than one full-time-listener but is enough to try the service and see if it works for you. As the previously mentioned shoutcast-streaming feature is excluded in this plan,  this isn't a long-term option for you. But 10 ¢ per stream per person per hour also doesn't sound too much to pay.

The second plan now costs, let's say 39 €, includes 5.000 StreamingHours and every hour on top costs another 8 ¢. The next higher plan includes 15.000 at 79 € at 6 ¢ the extra hour and the one for 99 € contains 50.000 StreamingHours with any hour after being as cheap as 2 ¢. This is only a calculation example and doesn't necessarily work in the real world but it illustrates the idea. Because the concept of plans still works here, with the special feature that you can even offer a plan of 0€ you make money with. Might even make more money than with the other plans because of the higher per-hour-price.

The reason why you still want the other plans though, should be obvious. Aside making business predictions easier, you can also reward your customers on their success. Instead of making it the experience of "well, you had so many streams, we had to cut your services", you can make it the story of "Congratulations on your peak of listeners last week. We just wanted to let you know, for successful Radio Streams like yours our plan B has a pricing system, with which you've saved 100 € this month alone already.". You become part of their success story, a supporter and helper on the way. Not the technology that failed on them during the best stream of their lifetime.

Through this model suddenly you are also much more interested in the numbers of each and every client and love to serve them to optimize those, give them insights and dashboards, even live stats to make them do their job better. And once you understood this mechanic behind the curtains, it becomes obvious why Amazon is so successful. It isn't because of their resources, it is because of the business model implemented through their pricing scheme.

>>>>>

== Case Studies

Let's take a look how the previously mentioned methods and concepts are applied in real life by SaaS Companies.

== Amazon Web Services

I've already mentioned AWS, who've pioneered many of these aspects in pricing through their cloud services. Let's take a quick look into their way of selling you an AWS instance and upselling you within the process.

Admittedly the AWS buying API isn't the most easy to use thing out there. 

===


== GoDaddy / Ghandi

- Look up Ghandi

== Salesforce.com

_Guest contribution by Alexander Scholz_

Salesforce.com is a customer relationship service entirely build online. They are best known as one of the first  companies successfully building a business solely based the Software-as-a-Service.

Salesforce has hardly changed their pricing in the last couple of years. They run 4-5 different pricing models. The amount of plans vary on country. The price vary on country and currency, based on their approach on how to enter the underlying market.

=== Pricing Plans

For german customers the pricing starts with 4 EUR / month per client for the Contact Manager Edition and ends with 350 per month for the Performance Plan, if paid yearly. As described earlier, it is really useful to rest the pricing upon a per user base: you can get into a smaller company and grow together with their needs to go for more Salesforce users, thus upselling for Salesforce gets easier.

Whats interesting here, is that the pricing range itself got bigger during the last price changes in 2013 / 2014. On the one hand the smallest plan got a little bit cheaper, so entering new niches in the market gets easier. On the other hand the most expensive pricing got even more expensive, but got also injected with some  additional features and services and definitely aims for the big corporate guys. Salesforce.com gets serious about competing with Microsoft and Oracle for the blue chips as CRM systems.

Nevertheless the first two plans are limited to five users per company. They make sure, that upselling the plan is just a matter of time for their clients. Interestingly it was possible as a Salesforce client to go for e.g. two times the Group Edition, if you wanted to stick around with the plan, without moving up to the next one just because you needed one more user.  From the point of view of Salesforce this is really a great thing to do. Firstly, you save the client a lot of money and secondly you keep them as clients and secondly you really make them happy, because the actually can save more than 3x their money by not moving from the Group to the Professional Plan.

Of course they also highlight their "most popular" plan. I never believed in this kind of advertising. But it works, and keeps up their margin.

=== Differences of Plans

The different pricing plans are build on each other. The next one includes all functions from the previous but offers more functions as well. Being a Salesforce user myself, I know, that sometimes the decision for one plan over another is a hard one, especially when the delta between two plans can easily be more than 50 EUR per user per month (600EUR a year). I think one of the most features people want the most is the Salesforce API. And so Salesforce offers their API starting with the Enterprise Edition, which is already very pricey (135 EUR / user). It is really interesting, that you can add the Salesforce API separately also to the previous plan, but than the API alone will cost around 50 EUR per user. If you add this up with the pricing for the Professional, which is 70EUR you are pretty close to the 135EUR of the Enterprise version.

There is a great thing you can learn about upselling a product. Usually people really want some extra possibilities they can bargain over (e.g. Salesforce API for lower pricing plans for some extra cash). If you offer them this possibility they will be happy. But if they have to choose between the lower plan plus one extra function or the bigger plan, which ends up being slightly more expensive, they will usually go for the bigger plan, as they get the full scope of functionalities.

=== How Salesforce handles discounts
From the first glance, Salesforce does not offer any discounts at all. Getting deeper into it, they do. Here are some possibilities.

==== Discount based on contract term
Usually you pay for one year in advance. This is bad for you, but good for Salesforce. If you pay for two years in advance, you can save up to 15% per year additionally. On the one hand you save real money, on the other you are stuck to the service. By the way, upgrading your plan is pretty easy here, downgrading is nearly impossible.

This example is perfect to reduce churn and improve your planning, which is equally key for a SaaS company. I think, you should consider such an hidden offer, always.

==== Discount on number of users
Although they announce, that pricing is fixed based on your user base, you can talk them into some discounts, when you start growing. I don't really think, that this is useful, as it waters down your pricing model, but sometimes it is of great help to keep clients happy.

==== Discounts at the end of quarters
Salesforce is a pretty big public company. Making shareholders happy with quarter to quarter growth is really important. Thats why they are more flexible at the end of their fiscal quarter. Of course this isn't exactly something a startup should consider, but it should give you an idea, that announcing an special offer pro actively, can boost your sales in mid-term.“


=== slack.com's pay-as-you-go-pricing

In this chapter I've talked a lot about Amazon and their Web-Services as the pioneers of this model of payments. This started a few years ago though and other have picked it up meanwhile, too. I'd like to discuss with you another really great example as a case-study for pay-as-you-go-pricing with plans: slack.com.

Slack is a internet messaging services for teams. It offers web-browser-based chatting over multiple rooms, while also being accessible through the established chat protocols XMPP and IRC, which lead to a high adoption in programmer circles (as they can stick with their own preferred chat clients). Slack's target market clearly is toward programming and communication teams within tech and internet companies and organisations. This also get very clear in their pay-as-you-go-planed pricing scheme:

image::image/pricing-on-slack.png[scaledwidth="80%",align="center",alt="Slacks Pricing Scheme"]

As mentioned before, they also offer a free plan, allowing one to set up without any further questions and use their service right away – one of the many benefits of SaaS. Compared to the other plans it is clearly visible what you'd get for your buck on top: more storage and archive size and - this is important - more external integrations. On top for every higher plan there is also more support.

Why is this "pay as you go", one might ask. Because from "standard" on, the company is paying _per user_ per month. The bigger the team, the higher the payment. That's something you might haven't noticed initially as this is communicated in a subtle but clear way. Because when trying it out one only skims over the other pricing to make sure they aren't absurd. A quick glimpse says it costs 8$/months. A price is totally okay if you ever want to upgrade, so testing is safe. Converting more and more people over into the project and suddenly you have five or ten people in it. Remember you are still on the free "Lite"-plan. This is where the "external integration" limit is such a genius move.

External services are features slack.com offers to have third party information automatically be shown inside slack's conversations. This could for example be reports from your Project Management Tool or Version Tracker, they have support for Jira, Mailchimp, Github, Bitbucket and about fifty more at the time of writing. These integrations, though you initially don't even know what they are, quickly become very useful for the teams to stay up to date through their conversations. Many teams will just start with one or two integrations but over time the team grows and so does the amount of tools used – -maybe a Jenkins Instance is added and Trello for Todo List). Inevitably the customer will run into the 5 integrations limit.

At a time when the team most likely already has many more members, too. And it is only by then that the team realises, to have more external services will immediately cost them _8$ per user per month_. With 15 people they have on board now, this is a steep zero to 120$ a month. Though this is a lot, it would be much harder to change to a different tool now that this one is adopted. With 15 people on the team 120$ a month isn't too bad to pay for either and they will do it. The reason I am pointing this out is, that this feature also acts as an post-trial upselling argument here, similar to the way we've discussed them before. When one starts using slack.com, many don't even know what these external services are but with the successful team during the trial period one quickly learns to appreciate this feature to the point that it became the argument to pay 120$ more a month for them. This really shows the slack teams knows their product and their numbers and tailored the pricing scheme accordingly.

In a similar way storage space between standard and plus works. It will take quite a while before people really run out of space. But once they do, there is no turning back of the previously mentioned features. And you notice the price is less than double from standard to plus? Though you get twice as much storage? And even more detailed usage reports? And these usage reports are key again. As the one paying the bill for this service in the end will be a company. And companies like to create structures, hierarchies and monitor their employees for some reason. I bet the usual monitoring in standard isn't quite enough for your boss to track your actual productivity and they feel like they miss something. When the team is big enough though, slack offers you for _just a little more money_ to have way more control with the next plan.

All that while making more and more money on their customers growing their team, aka participating on their success. Pay as you go with plans as pretty as it can be. Genius.



<<<<


== Other pricing still makes sense
With all that said, I think there is good reason to price your SaaS-Service around the given plans. But that doesn't mean you have to or should be doing this. As these prices work and are most likely working for the majority of SaaS-Projects out there, there are still markets, where a different pricing (in terms of the actual numbers) makes much more sense. I'd like to point out a few to give you an idea about this.

=== Enterprise
I mentioned enterprise before: if the majority of your customers will be in that segment and you'd actually have to sell via phones or visits, the pricing categories don't make much sense. Customer acquisition is not going through the Internet and self sign up but on much more expensive channel. Also, as said before, they like to talk about bigger numbers generally. Calling a head of sales to sell them a subscription of 50€/month just sounds like a waste of time to them.

=== High-priced customers
Another classic case I encountered at an incubator in Palestine at which I mentored, was this: one startup wanted to build a case-management-SaaS-Software for Arab Lawyers with a target price of around 30 $. I argued that Lawyers are a _high-pricing audience_, meaning they don't buy suites because the price is low but because the price is high. They are used being paid a lot but also to pay a lot, their whole value-chain is high-priced, from their suits over the consultants they hire up to the parties they throw. The predominantly mentality in their line of business is that a product sold at a low price can't be of high value. They'd rather be bragging how expensive something was than how cheap it was.

In cases like this one I'd look at my target group, try to find what they'd be saving by using this service and arrange my pricing around that. In this example, if the software is done properly, this would save the lawyer their office assistant, which would probably cost them at around 600$ a month in that market. So if you can offer the same service for 399$, argue that they'll still be saving a lot of money, it comes of as a money saver (compared to the office assistant) but still makes them value the product a lot. And as most lawyers are also running their own shops, they'll be happy to save that money.

This is a very classic selling but also price-setting argument actually: finding a real world costs it would replace and put your plan lower than that while providing a similar service. This also directly puts you in pricing competition against something with a rather stable price and won't undermine the costs of the technology very soon.

Other markets with a similar attitude would be doctors, recruiters, head-hunters and HR. And I am sure there are others, so look at your market and the customers closely.

[NOTE]
====
Also, in this case the argument was rather simple for that price as at 30$ even if they got 10% of all Arab lawyers to sign up, they wouldn't get enough revenue to pay their own employees. So don't forget to also take that into account, when talking about the price you can offer.
====

=== Luxury and Brand
Another classic case in which you'd want to avoid the how-low-can-you-go-rule is in luxury products and brand-associated services. It is a known phenomenon that if you decrease pricing for luxury products, you make less money. There always need to be the luxury gap between the ordinary champagne were the pricing ends around 70 € per bottle and the luxury segment that starts at 600€. And though pricing your bottle at 200 € seems like a missing market niche, you will be to expensive for the normal market and too cheap for the luxury segment. Luxury people buy because the price is too high on purpose.

A similar effect goes for brand-associated products and services - unless of course the brand focuses on being cheap. Normally brands try to create an emotional connection and become part of who you are. That also puts it in a certain pricing segment, that the customers defines themselves in. By going under that segment, you might reach new customers, but you won't convince the usual segment. And that'd disrupt your market share in ways, you don't want to cope with. By offering a market competitive pricing or even something cheaper, you risk of creating the feeling of doing something cheap. And emotionally connected customers therefore feel cheap themselves. You want to avoid that by all means.

<<<<


== Closing notes
This is written towards the end of 2013 and the beginning of 2014. All pricing in this book should be adapted to inflation and future shifts in spending willingness. And though I have been writing this online and it is intended for future updates, please take this into account when you look at the numbers and their relation to each other.

=== Feedback

That said, I'd love to have your input and stories about this, too. If you have remarks or critique or just want to share your experience, please don't hesitate to either link:https://github.com/ligthyear/ebook-saas-pricing/issues/new[open a ticket] on link:https://github.com/ligthyear/ebook-saas-pricing/[the Github repository] or – if you aren't sure how to do that – email me directly at ben@create-build-execute.com . And maybe I will incorporate your feedback into the next update.

Thank you for reading.