= A Coders Guide to SaaS-App-Pricing =
:Author: Benjamin Kampmann
:Email: ben@create-build-execute.com
:Date: March 30th, 2014
:Revision: 0.8
:stylesdir: stylesheets/
:stylesheet: scribe.css




== Introduction ==

This is a short guide – on purpose. In the spirit of 37Signals' Getting Real sticks to the information relevant and in a brief but thorough fashion. This guide will teach you all you need and want to know about about pricing Software-as-a-Service (SaaS) Application. It won't tell you want a SaaS is and what it isn't how to structure or build it. This guide sole focuses on putting an optimal price tag on it. Though many of the rules might also apply to similar models like Kickstarter Campaigns, this guide focuses on reoccurring subscription pricing of SaaS for consumer and B2B-business.

If you are here to just get a number: it is €29.95 per month (respectively $39.95). This guide will explain you why and which cases it is different. But if you don't care and just want a number, odds are, this is the number you want.

Enjoy.

=== Changelog ===

As this is supposed to be published primarily online, the document will have updates (in form of continues deployment). This section lists the changes, latest to first.

If you want to stay up-to-date, please navigate to https://github.com/ligthyear/ebook-saas-pricing , log-in (or sign up), click on the "Not watching"-button and select "watching".

**Latest Changes**:

 - 2014-05-21
   * finish first copy edit
   * add slack.com case study for pay-as-you-go-with-tiers

 - 2014-05-11
   * latest copy edit
   * fix the build, make publishable

 - 2014-03-12
  * copy edits

 - 2013-12-30
   * first draft

<<<<


== What makes SaaS different?
Software as a Service (SaaS) is a very interesting business model model. With a subscription system at its core, SaaS revenue doesn't come from new costumers only – it makes sense to focus on building a great product for your existing customers, too. Another highly fascinating aspect about SaaS lies in their cost structure: there are very low – if any – per-item-costs. While you need personnel to build, improve and scale it, this still makes it cheap compared to the cost structures of so many other businesses, where you might have to buy expensive special vehicles and tools and pay for per-item materials. As the term says, it is a service business and a highly cost-efficient scaling one, too.

Unlike other software business, SaaS is barely about comparing lists of features for the customer – as every software and its service isn't only unique but also fast and quick to enhance. Most likely you have a unique feature or way of doing things that differentiate you, while your competition might has offers, you don't need or want to have. Which makes a customers a perfect fit for you. In the service industry you always want to convince your customers with another argument than "being cheaper" – and so want your competitors, by the way.

Running a software in this the service industry means, you are not bound to have to think about pricing in a competitive manner nor do you have any costs forcing you to structure the pricing around them. Setting the price for a SaaS is totally in your hands, which makes it a game of psychology. One of high importance even, as it is a key factor whether people can, effort and want to pay for it. The beauty of it though, once you've found the target, it will sell like hot cake. On top, you have basically no costs on upselling them further either. We'll come back to that later.

<<<<


== Pricing Psychology basics

SaaS product have a few more spins to it though. Another one is its ability to be repackaged into essentially any size for no further costs. You can sell the same thing just in three or four different sizes. Thus allowing you to have an offer for each budget size.

With its low costs, this is a key instrument in SaaS pricing: have multiple tiers. But be aware to give only a few. Offering too many makes the choice harder: there is too much to read and compare making it hard to decide which is the best solution – a fundamental problem with crowd funding pricing. Tiers instead should be comparable on one page, their differences and benefits clearly distinguishable making it easy to find that tier that fits the customer the best. In my experiences three pricing levels work the best - some argue it's five, but I often feel that is too much to read (and you'd need five clear differentiations).

=== How low can you go?

The lowest priced tiers is the one, you'll use for advertising and marketing. Try to make it as low as you can reason without having the feeling of selling out cheap. This is also the (only) tier you offer a free trial with. Both of these measures make it easier for people to start using your product. By making it fairly inexpensive it also has fewer cancellation. Even if people decide to not stick with your product, a price of for e.g. €9.99/month doesn't feel like the trouble of trying to cancel (don't make it hard to cancel though!). So, go as low as you can and still feel comfortable and make some money with.

=== Too thin

Your real costumers won't use it anyways, as that tier is too lightweight for them. The lowest offer shouldn't be bad or cheesy, but don't forget it is your marketing pricing to get people to look into your service, to try it out and hook them on it. This tier therefore should deliver "just not quiet enough" yet. If you've any reasonable idea of your business, you can probably tell right on the spot what is require to make it enough for your customers – otherwise do some market research. Maybe they'll run through ten clients a month, then if only eight are included in your lowest tier or they are running a radio stream with music so they need 192kb/s mp3, then that tier supports only up to 128kb, if they have revenue of 15k per month, this tier allows up to 10k – you get the picture.

It should be obvious that this tier isn't quiet enough for them. Don't shout it into their face nor make it a completely useless offer, but use terms and numbers they understand. They should have the feeling it isn't sufficient for what they need. For a very simple reason: when they are checking your pricing this thoroughly, they've looked through your promo page are interested in your service and most likely want to use it. If they just want to try it, these numbers don't mean much. They'll hit the "free trial button" without wasting another look at it. But when they come back, after maybe having tried it and others, and do take the time to go through your offer thoroughly, you've already won. They are sold. Now you only need to settle on the price with them. And by making the cheapest solution unusable to them, they immediately move to the second tier, not even questioning whether another competition might be better at the same price. And it also gives them a slight satisfactory feeling of "being higher than just somebody".

=== The second is good, the third is to settle
Now the second tier offers much more than the lowest one we've talked about. Not only can they run their business with it, but it is almost too generous, offers more than they ever feel to be needing. For just about double the initial price (or slightly less) - it's a very good. It is in the price range they want to and _should_ settle. But they don't. By offering so much already – essentially all they ever wanted – they've become curious about what more you could be offering. And they'll have a look at the third tier and compare it to the second.

Now it gets interesting. By having a price slightly higher than the second tier but adding something extra-ordinary - even if they don't necessarily need it - the offer will be very interesting to them. Because you are offering so much more in the third in comparison to tier two while it isn't even that much more expensive. Comparing them it actually feels like a really good offer, you get more for your money. In my experience, the best way to achieve this is by adding exactly one major, key feature on top (aside from appropriate scaling parameters). Like in the former mentioned audio-stream example, add a second stream - it adds a lot feature but got "thrown in" rather cheap. Much cheaper than buying a second tier two.

.The psychology behind this
NOTE: has been explained very well by link:http://www.youtube.com/watch?v=xOhb4LwAaJk[Dan Ariely on youtube]: we don't know our preferences that well and therefore are receptive to influences like supposedly good offers in comparison to another.

=== Real world case
I did exactly this pricing range for a crowd funding campaign of a Hollywood movie. We've put it to exactly these tiers:

 * 9.95 € - you were thanked on the website, got access to the bonus material and live updates through the websites about the production, as well as a download-link for the movie as soon as it gets released on Bluray

 * 29.95 € - Same as before, but you'd also be mentioned in the credits of the movie.

 * 49.95 € - Aside from the news updates, being mentioned in the credits, you'd also be receiving a real disc version of the Bluray.

This allowed the studio to advertise with "support this movie starting from 9.95€". But the real deal was, getting mentioned in the movie, so people were immediately checking the second tier as the first didn't offer this at all. And though many settled on this, for less than double the price, you'd also receive a Bluray - well, doesn't that sound great?

So thought 57% of the customer (while 21% went for the first and 22% for the second option). We sold them a Bluray disc for 50€. One movie - not a DVD-set. A movie could already have access to through a download link to for twenty Euros less. A Bluray discs, which costs essentially nothing in production (which is why the producers wanted to offer it as part of the lowest pricing range initially). We wouldn't have gotten anyone to pay for this, if I had said it this way. But through this pricing schema, we could. And the customers were happy to do so.

.This is a Kickstarter-like campaign
[NOTE]
====
Given, this is not a reoccurring subscription but a fan-driven one-time transaction also selling the fact, that you are taking part in getting something done that "without you wouldn't happen", so people are generally more generous.

But using a similar pricing scheme with 19.90€, 29.90€ and 39.90€ does have similar effects on a subscription basis.
====

=== Ending with the Nine

I've very bluntly ignored the discussing of the pricing numbers. You might have noticed I've only presented you cases ending on nine. If you are little familiar with the subject, you know that we don't exactly know why, but having the price end with a nine outsells every other option (with five and seven right behind, but off by far). This has been shown in a series of studies, like link:http://link.springer.com/article/10.1023%2FA%3A1023581927405[this one from MIT] and discussed in detail in books like link:http://www.amazon.com/dp/080909469X/ref=cm_sw_su_dp["Priceless" by William Poundstone] footnote:[Published at Hill and Wang, 2011, ISBN 978-0809094691]. If you want more detail on that, I recommend reading those for further insight.

=== Enterprise ain't part of this

The described applies as long as you are mainly talking to end-consumers, small- and mid-size businesses but not for enterprise. The basic rule goes like this: if the company is big enough to employ someone, who's main job it is to buy these services, they'll call you up and ask to negotiate a custom pricing tier with you. And even if it's only to justify the existence of their job (as they have work to do: negotiate with you), believe me, they'll do it.Which costs extra effort on your side in compared to auto-serviced customers, signing up through the website, so don't forget to charge them for it, too.

If you expect Corporate Customers, add another box on the bottom (or somewhere clearly off the comparison table) saying you are open to discuss further models and individual pricing for bigger customers or special areas (like non-profits or education, like Google is doing). During the negotiation you then go from two simultaneous stream to ten and add a big support package on top, that you sell for at least ten times the price you have on your highest tiers. That at least puts it back into the price-range that enterprise is used to deal with and happy talk to about: they really rather buy the service for 5.000€ than for 50€ as the later is harder to justify to be employed for.

That is also why even your highest priced tier does have some limits to it: otherwise you'd have nothing to sell to enterprise and high-class customers. Even if during negotiations you settle for eight times the highest tier so they feel they "won" the negotiation with you, it was worth the effort for you. But don't ever think that this is an option to include via a one-click sign-up. Enterprises don't do one-click-sign-up.


<<<<


== Upselling without Upsetting

I've mentioned upselling within SaaS-Product before – it's one of the most beautiful aspects of it. The greatest thing is about upselling SaaS is it . And though we discussed before that a good pricing strategy on the overview page can already move people into settling for the more expensive tier, there is more to upsell with. Sadly, upselling has been abused in the past, like airlines tricking you into getting a "travel insurance" by already checking the field for you. To some it has a bad taste to it – for good reason, that behavior is pretty upsetting to anyone. Which is really not the first experience you want to have starting to do business with your customers. Understand that the upsell is still part of the first experience chain and getting this right is important.

One company that does upselling very right is Apple. Like everything in the selling chain, it is the right the communication and presentation to the other party that decides whether it works or not. And though Apple sells end-consumer hardware, the principles we'll look at still apply to the upselling of SaaS products during the initial checkout. Let's see how they do it.

=== Case Study: Upselling like Apple
When you go to the Apple online store to buy a new MacBook Air (as an example), you are presented with different models. You should immediately notice the resemblance to our "packages" or "tiers" as described before:

.Selecting a Macbook Air
image::image/page-1-above-fold.png[scaledwidth="75%",align="center",alt="A Screenshot of the Macbook Air Selection"]


There are just a few things different in these options, but they make for a big distinction: the first being the Screen size (either 11 inch or 13), the second being the amount of flash storage. By presenting those bluntly, Apple changes the conversation to _which one to buy_ based on raising the question of the appropriate the screen size — which they do very clever by having the second screen even be presented bigger — and in the secondary stage about the storage. First you pick the screen size, then the storage and then you are presented with the price. That way, the price is merely a result of our decisions and wasn't part of the decision in the first place.

Now that you've decided what you want, you don't really care that Apple is selling you 128GB of storage for 200EUR extra. Because this is what you wanted, you are happy with it and very few people will ever realise. But it gets even better. Once you have selecting this one, Apple presents you with the "configuration page", a second page to actually upsell you even more stuff in a very clever way.

.The "configuration" page
image::image/apple-store-page-2.png[scaledwidth="35%",align="center",alt="The configuration screen"]

Sure, you need this to configure the CPU, memory and keyboard (which you probably want to do) but there is plenty of things listed, which are solely about selling you more things: how is an external screen, an AppleTV or a Printer part of a MacBook Air configuration? Well, it isn't.

But by having this second "configuration"-screen, Apple does something very smart. It took the question which package to pick out of the scope. That decision has been done, the other options are of no more relevant. By splitting the process into two pages, you don't have to bother about comparing prices of the configuration to other packages. Adding 8GB of RAM on a 13-inch could potentially cost more than on the 11-inch (which could even have plausible, technical reasons), but no costumer would ever go back and check. Because picking another general package isn't of question any more.

Another thing you've hopefully noticed is the way this is presented: Apple takes four-fifth of the width to focus on the configuration. The summary of what you've selected on the other hand is just a tiny part on the right. And though it is showing the total price, always stays with the user and as such gives them total transparency about their choices, by keeping it to the top right, we are less likely to look at it or at least not until we've scrolled down the main part totally already.

By splitting the configuration into big chunks that basically cover the better part of your screen while you scroll, each upgrade becomes separate from the others, making them appear as individual, not too expensive choices. And one has to actively decide on each one. Making them appear separate visually, also separates the decision into individual smaller ones: looking at the mini-display-port-cable has nothing to do with the fact that one just agreed to buy the Thunderbold. Look it's only 29,99€. In the customers brain the other decision has been processed and labelled as done. And though one might just want the mini-display-port, the customer is less likely to go back and change his mind on items before in the list.

.Default is "None"
[NOTE]
====
One major flaw that many (airlines) do, is preselecting upsell-options and forcing the user to actively remove the selection in an often complicated way. Tricking a customer into upselling is an obvious way to have more people upsell in the short time but drives the customer angry and educates them you aren't a trustworthy party. This isn't working in the long-term.

Unlike how Apple is doing it here, making it clear you don't get tricked into buying anything you don't want by communicating: "It is your choice. We are happy either way. We just think _this_ might be of interest to you, too." And the customer listens. And they buy. And they are happy about it.
====


==== The upsell
Let's take a look at the individual things Apple tries to sell here. The same as before with the overview product page, upselling appeals to the user, it looks good, is interesting and gets quite some space. By giving upselling so much room, Apple has enough space to present the product, all important information and list the options. Just scrolling over them is going to take a little while and at least one is going to catch ones eye.

Once again, how it is presented, is of high importance. Let's take this external storage as an example:

.Upselling you the Thunderbold storage
image::image/page-2-storage-none.png[scaledwidth="80%",align="center",alt="Thunderbold Storage"]

Not only does it have a lot of room and scrolling over it takes long enough for our eye to catch a glimpse and the brain to notice the content, but also the process of coming to a decision is similar as before. By presenting the price in square brackets it appears to be merely a consequence of the decision rather than part of it. Now, the details of the option one selected are in foreground. And it gets even better. Apple isn't done upselling once you selected an option:

.After selecting an option, the price disappears
image::image/page-2-storage-selected.png[scaledwidth="80%",align="center",alt="Selected a Storage"]

Did you notice the difference? Apple changed the prices. As one decided on an option, not only does it become part of the decision (and the summary) so the price disappears, also the other prices are updated to only show the difference in pricing. Genius. Just genius. For ones because the more expensive options don't appear to be as expensive any longer but also because by phrasing it "Subtract 349,95€", even the "None" option now appears to be costing something. This is triggered by providing a positive number here. Our brain immediately notices that as high, while the meaning of "substract" and the act of negating it takes more time and effort.

Generally thinking of the negative is hard for human brains, by using words alongside the numbers other parts of the brain are required to process it, making it even harder. It would be very different if instead of "subtract", it would show the minus sign or – even worse the colour-codes red and green - things our brain would understand much faster and with less processing power. But by making it harder to process, customers are more likely to stick with the selection or even chose another one that feels less expensive now. Again, Apple changed the conversation away from the price to "how about a little more?".

=== What to upsell

In order to be able to upsell, you need to know your numbers obviously. For upselling but those features, people think they need or want but which are slightly outside of the main product, are of interest. Going back to our former case of audio streaming, one example is buying an upgrade to stream 256kb/s instead of just up to 192kb/s per radio stream. Or even offering 320kb/s as the ultimate upgrade, making professional DJs uber-happy to be able to offer the best quality though the real effect for most listeners wouldn't change after 192kb/s.

An upsell is always the question of what you _need_, _want_ and might _want to need_. Like in the Apple example, selling video adapters and printers just makes a lot of sense. One is buying the laptop with specific needs in mind. And by showing those options one is reminded about the purpose of, for e.g.,  showing presentations at conferences requiring an the adapter.

Another example that comes from the radio service I mentioned before, is about one specific feature, which actually costs the service almost nothing and was a default for long time but is something very easy and cheap to upsell with: stream to shoutcast service. Shoutcast is an external server that would then handle the distribution of the streams, resulting in your service only having to offer one output stream – making it technically cheaper to offer your service. But as many (if not all) other providers forbid these kind of features to enable a lock-in effect, enabling this feature would be classic thing to upsell with. Not only because more people think they need it than actually ever use it but also as the numbers show plenty people do use it instead of taking the more expensive tier with more streams.

By having to buy this feature extra on the second page, people are very likely be willing to pay a higher total than just getting a tier that costs more but includes more streams and would cover that, too. People pay for control and convenience.

<<<<

== The holy Grail of Pay-as-you-go

The latest addition to the pricing models in the SaaS market is the pay-as-you-go-model. One of the first to offer this in large scale – and make tons of money that way – was Amazon with its cloud solution Amazon Web Services (AWS). In there you'd be paying for only what you use as in CPU-Cycles, storage and traffic. Unlike many other services which only give you limited resources and block its entire usage for you, this model allows you to easily grow and scale your business starting very small but becoming very big, too. And though especially on large scale, Amazon is a very expensive cloud infrastructure, it is still the most widely used and implemented one out there. Leaving analysts puzzled how they do it.

This confusion is rooted in a common misunderstanding of the pay-as-you-go model: despite popular believe, the selling point actually isn't the resource itself. What people buy are flexibility and convenience. Flexibility because most of those services offer a very, very low starting tier, a basic offer that is free in most cases. You can spin up a free instance on AWS within half an hour and try out things you want to build. For many things, this is enough to get started and only once a project gains traction and generates traffic, one needs to upgrade to bigger machines and pay for the extra resources used.

In a pay-as-you-go-model you barely have any tiers to take, no steps to grow. The payment grows with the customers of the customer. And though those are priced very high, as they are always directly linked to the amount of customers they have, it is very easy to calculate that into the pricing for ones customers, it becomes a static fee per customer to calculate into their charge. At the same time it is highly flexible and promises to be able to handle peaks for you, too. Peaks are good for your business, as they usually mean more business. But if one runs out of the traffic package because of a peak, that is very bad. The pay-as-you-go-model might be more expensive than the same resource if booked traditionally but customers are paying not for the actual resource, they buy the flexibility to use resource they don't need at the moment but think they might will.

The other thing it sells is the promise of growth. An infrastructure services like this makes it easy for you to grow on it. It is even in their interest for you to grow, as more business for their customer means more business for them. Which is the best business model you can ever have, one with the interest into growing the customers business. Greatest of all business goals.

=== Applied to tiers
Thinking back of the tiers we talked about before, how does that integrate in a pay-as-you-go-model? Amazon has been pioneering here as well, with a feature they call "reserved instance hours". It boils down to a classic and old principle: the discount if you buy a lot and pay upfront.

Basically instead of being charged for every minute you use, you say at the beginning of a period that you'll pay for at least 2 full CPU months and Amazon gives you that for a discount. If you don't use them, you pay too much but if you do, you don't pay as much as for the normal pay-as-you-go. If you need more resources than that, you often pay a discounted price on those extra resources, too. Not as good as the offer for the reserved resource but still cheaper than if you hadn't reserved at all.

So, if there is any way that you can create billable timed resources through your service, this is the model you want to go for. Going back to the radio streaming example from before: one stream hour could be such a resource – every hour that one persons listens to a stream. Now on the lowest tier, you'd have to pay nothing, get 1.000 StreamHours included but every stream hour after is at 10 cents - this would account for a little more than one full-time-listener but is enough to try the service and see if it works for you. As the previously mentioned shoutcast-streaming feature is excluded in this tier,  this isn't a long-term option for you. But 10 cents per stream per person per hour also doesn't sound too much to pay.

The second tier now costs, let's say 39 €, includes 5.000 StreamingHours and every hour on top costs another 8 cents. The next higher tier includes 15.000 at 79 € at 6 cents the extra hour and the one for 99 € contains 50.000 StreamingHours with any hour after being as cheap as 2 cents. This is only a calculation example and doesn't necessarily work in the real world but it illustrates the idea. Because the concept of tiers still works here, with the special feature that you can even offer a tier of 0€ you make money with. Might even make more money than with the other tiers because of the higher per-hour-price.

The reason why you still want the other tiers though, should be obvious. Aside making business predictions easier, you can also reward your customers on their success. Instead of making it the experience of "well, you had so many streams, we had to cut your services", you can make it the story of "Congratulations on your peak of listeners last week. We just wanted to let you know, for successful Radio Streams like yours our Tier B has a pricing system, with which you've saved 100€ this month alone already.". You become part of their success story, a supporter and helper on the way. Not the technology that failed on them during the best stream of their lifetime.

Through this model suddenly you are also much more interested in the numbers of each and every client and love to serve them to optimize those, give them insights and dashboards, even live stats to make them do their job better. And once you understood this mechanic behind the curtains, it becomes obvious why Amazon is so successful. It isn't because of their resources, it is because of the business model implemented through their pricing scheme.

=== Case Study for pay-as-you-go-pricing: "slack.com"

In this chapter I've talked a lot about Amazon and their Web-Services as the pioneers of this model of payments but other have picked it up meanwhile, too. I'd like to point you to another really great example as a case-study for this: slack.com.

Slack is a internet messaging services for teams. It offers web-browser-based chatting over multiple rooms, while also being accessible through the established chat protocols XMPP and IRC, which lead to a high adoption in the tech coding scene as they can stick with their own preferred chat clients. Slacks target market clearly is toward coding and communication teams of tech and internet companies and organisations. This also get very clear in their pay-as-you-go-tiered pricing scheme:

image::image/pricing-on-slack.png[scaledwidth="80%",align="center",alt="Slacks Pricing Scheme"]

As discussed previously, the also offer a free tier, allowing one to set up without any further questions and use their service. It then has clear distinctions towards other features like storage, archive size and (I'll come back to that) external integrations. And the usual upgrade on support once you go higher.

Why is this "pay as you go", one might ask. Because from "standard" on, the company is paying _per user_ per month. The bigger the team, the higher the payment. But this is communicated in a great manner. Because for the first try one just looks for the general pricing and free version to test. A quick glimpse says it costs 8$/months, which is totally okay if you ever want to upgrade and you test the trial version. Converting more and more people over into the project and suddenly you have five or ten people in it. Remember you are still on the free Lite-Tier. This is where the "external integration" limit is such a genius move.

The external services are features slack offers to have external information automatically be shown into the conversation. This could for example be reports from your Project Management Tool or Version Tracker, they have support for jira, mailchimp, github, bitbucket and about fifty other ones. This renders to become very useful for the teams to stay up to date through their conversations. Many teams will just start with one or two integrations but when the team grows other tools are added (maybe a jenkins test framework and a trello todo list) and you'll unevitably run into the 5 integrations limit. It is also highly likely that by that time, your team already has quite a few members. And it is only by then that the team realises, to have more external services will immediately cost them _8$ per user per month_. With 15 people they have on board now, this is a steep zero to 120$ a month.

And though this is a lot, it would be much harder to change to a different tool now that this one is incorporated. And with 15 people on the team 120$ a month aren't too hard to pay for. The interesting thing is that in this case the integration service limitation also acts as the upselling argument we looked at before. It is an upselling indicator for the successful teams. But when you started using that service you had no idea what "external integrations" even are. During the trial period, you haven't only learned their usefulness they've become the argument for you to upgrade. This really shows the slack teams knows their product and their numbers and tailored the pricing scheme accordingly.

The same goes for storage space between standard and plus. It will take you quite a while before people actually reach that limit but once they do, there is no turning back. And you see how the difference between standard and plus is less than double? Though you get twice as much storage? And even more detailed usage reports? This, though, is the key thing I think. Because the one paying the bill for this service in the end will be a company. And companies like to create structures, hierarchies and monitor their employees for some reason. I bet the usual monitoring in standard isn't quite enough for your boss to track your actual productivity and they feel like they miss something. When the team is big enough thouh, slack offers you for _just a little more money_ to have way more control with the next tier.

All that while making more and more money on their customers growing their team, aka participating on their success. Genius.



<<<<


== Other pricing still makes sense
With all that said, I think there is good reason to price your SaaS-Service around the given tiers. But that doesn't mean you have to or should be doing this. As these prices work and are most likely working for the majority of SaaS-Projects out there, there are still markets, where a different pricing (in terms of the actual numbers) makes much more sense. I'd like to point out a few to give you an idea about this.

=== Enterprise
I mentioned enterprise before: if the majority of your customers will be in that segment and you'd actually have to sell via phones or visits, the pricing categories don't make much sense. Customer acquisition is not going through the Internet and self sign up but on much more expensive channel. Also, as said before, they like to talk about bigger numbers generally. Calling a head of sales to sell them a subscription of 50€/month just sounds like a waste of time to them.

=== High-priced customers
Another classic case I encountered at an incubator in Palestine at which I mentored, was this: one startup wanted to build a case-management-SaaS-Software for Arab Lawyers with a target price of around 30$. I argued that Lawyers are a _high-pricing audience_, meaning they don't buy suites because the price is low but because the price is high. They are used being paid a lot but also to pay a lot, their whole value-chain is high-priced, from their suits over the consultants they hire up to the parties they throw. The predominantly mentality in their line of business is that a product sold at a low price can't be of high value. They'd rather be bragging how expensive something was than how cheap it was.

In cases like this one I'd look at my target group, try to find what they'd be saving by using this service and arrange my pricing around that. In this example, if the software is done properly, this would save the lawyer their office assistant, which would probably cost them at around 600$ a month in that market. So if you can offer the same service for 399$, argue that they'll still be saving a lot of money, it comes of as a money saver (compared to the office assistant) but still makes them value the product a lot. And as most lawyers are also running their own shops, they'll be happy to save that money.

This is a very classic selling but also price-setting argument actually: finding a real world costs it would replace and put your tier lower than that while providing a similar service. This also directly puts you in pricing competition against something with a rather stable price and won't undermine the costs of the technology very soon.

Other markets with a similar attitude would be doctors, recruiters, head-hunters and HR. And I am sure there are others, so look at your market and the customers closely.

[NOTE]
====
Also, in this case the argument was rather simple for that price as at 30$ even if they got 10% of all Arab lawyers to sign up, they wouldn't get enough revenue to pay their own employees. So don't forget to also take that into account, when talking about the price you can offer.
====

=== Luxury and Brand
Another classic case in which you'd want to avoid the how-low-can-you-go-rule is in luxury products and brand-associated services. It is a known phenomenon that if you decrease pricing for luxury products, you make less money. There always need to be the luxury gap between the ordinary champagne were the pricing ends around 70€ per bottle and the luxury segment that starts at 600€. And though pricing your bottle at 200€ seems like a missing market niche, you will be to expensive for the normal market and too cheap for the luxury segment. Luxury people buy because the price is too high on purpose.

A similar effect goes for brand-associated products and services - unless of course the brand focuses on being cheap. Normally brands try to create an emotional connection and become part of who you are. That also puts it in a certain pricing segment, that the customers defines themselves in. By going under that segment, you might reach new customers, but you won't convince the usual segment. And that'd disrupt your market share in ways, you don't want to cope with. By offering a market competitive pricing or even something cheaper, you risk of creating the feeling of doing something cheap. And emotionally connected customers therefore feel cheap themselves. You want to avoid that by all means.

<<<<


== Closing notes
This is written towards the end of 2013. All pricing in this book should be adapted to inflation and future shifts in spending willingness. And though I have been writing this online and it is intended for future updates, please take this into account when you look at the numbers and their relation to each other.

=== Feedback

That said, I'd love to have your input and stories about this, too. If you have remarks or critique or just want to share your experience, please don't hesitate to either link:https://github.com/ligthyear/ebook-saas-pricing/issues/new[open a ticket] on link:https://github.com/ligthyear/ebook-saas-pricing/[the Github repository] or – if you aren't sure how to do that – email me directly at ben@create-build-execute.com . And maybe I will incorporate your feedback into the next update.

Thank you for reading.